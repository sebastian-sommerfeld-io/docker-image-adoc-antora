---
name: Auto-generate docs

on:
  push:
    branches: [ "main", "feat/*", "release/*" ]

permissions:
  contents: read

jobs:
  README:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: README.adoc
        run: |
          echo '= Docker Image: adoc-antora' > README.adoc
          {
            cat docs/modules/ROOT/partials/vars.adoc
            echo
            echo "// +-----------------------------------------+"
            echo "// |                                         |"
            echo "// |    DO NOT EDIT DIRECTLY !!!!!           |"
            echo "// |                                         |"
            echo "// |    File is auto-generated by pipline    |"
            echo "// |    Contents are based on Antora docs    |"
            echo "// |                                         |"
            echo "// +-----------------------------------------+"
            echo
            cat docs/modules/ROOT/partials/README.adoc
            echo
          } >> README.adoc

          cat README.adoc
        shell: bash
      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: "[Actions Bot] docs: auto-generated adoc contents"
          add: README.adoc

  antora-yml:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: README

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Print Branchname
        run: echo ${{github.ref}}

      - name: Adjust version from 'main' to '<branchname>' or to '<version>' for release branches (if not already correct)
        if: contains(github.ref, 'refs/heads/feat/') || contains(github.ref, 'refs/heads/release/')
        run: |
          BRANCH="${{github.ref}}"

          old="refs/heads/"
          BRANCH="${BRANCH//$old/}"

          # antora does not allow slashes in versions
          old="/"
          new="__"
          BRANCH="${BRANCH/$old/$new}"

          # remove the prefix for release branches
          old="release__"
          BRANCH="${BRANCH/$old/}"

          oldPattern='version: '
          new="version: $BRANCH"
          sed -i "/$oldPattern/s/.*/$new/" docs/antora.yml

          cat docs/antora.yml
        shell: bash
      - name: Adjust version from '<branchname>' to 'main' if not already correct ... run on main branch
        if: github.ref == 'refs/heads/main'
        run: |
          oldPattern='version: '
          new='version: main'
          sed -i "/$oldPattern/s/.*/$new/" docs/antora.yml

          cat docs/antora.yml
        shell: bash

      - name: Run yamllint for docs/antora.yml
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: docs/antora.yml

      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: "[Actions Bot] refactor: set antora version to branchname"
          add: docs/antora.yml

  finally:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: antora-yml

    steps:
      - name: Send pipeline status to Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel-id: 'C0438TFQNPM' # pipelines channel
          payload: |
            {
              "text": "GitHub Action pipeline in repo ${{ github.repository }}: ${{ github.workflow }} = ${{ github.action_status }}",
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repo:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Started by:*\n${{ github.actor }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Pipeline:*\n${{ github.workflow }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\n${{ github.action_status }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered by:*\n${{ github.event_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch / Tag:*\n${{ github.ref_name }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Repository URL:*\n${{ repositoryUrl }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit / Pull Request URL:*\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
